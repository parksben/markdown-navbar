{"version":3,"sources":["../src/index.js"],"names":["randomId","size","str","result","length","charAt","Math","floor","random","MarkdownNavbar","props","_winScroll","scrollTop","window","pageYOffset","document","documentElement","body","newHeadingList","_getHeadingList","map","h","distanceToTop","abs","headingTopOffset","offsetTop","distanceList","minDistance","min","curHeading","find","setState","currentListNo","listNo","state","addTargetTimeout","setTimeout","_initheadingsId","addEventListener","clearTimeout","scrollTimeout","removeEventListener","contentWithoutCode","source","replace","pattOfTitle","matchResult","match","navData","r","i","index","level","text","levelCount","filter","startLevel","startLevelCount","forEach","t","toString","w","$1","$2","parseInt","nav","indexOf","dataId","target","querySelector","scrollTo","_getNavStructure","headings","querySelectorAll","curheading","Array","prototype","slice","apply","innerText","dataset","id","headingId","location","hash","_scrollToTarget","headingList","push","tBlocks","cls","evt","preventDefault","ordered","className","Component","propTypes","PropTypes","string","bool","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import 'core-js/shim';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst randomId = (size = 8) => {\n  const str = 'plokmijnuhbygvtfcrdxeszwaq1234567890';\n  let result = '';\n  while (result.length < size) {\n    result += str.charAt(Math.floor(str.length * Math.random()));\n  }\n  return result;\n};\n\nexport class MarkdownNavbar extends Component {\n  static propTypes = {\n    source: PropTypes.string,\n    ordered: PropTypes.bool,\n    headingTopOffset: PropTypes.number,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    source: '',\n    ordered: true,\n    headingTopOffset: 0,\n    className: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentListNo: '',\n    };\n  }\n\n  componentDidMount() {\n    this.addTargetTimeout = setTimeout(() => {\n      this._initheadingsId();\n      document.addEventListener('scroll', this._winScroll, false);\n    }, 1e3);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.addTargetTimeout);\n    clearTimeout(this.scrollTimeout);\n\n    document.removeEventListener('scroll', this._winScroll, false);\n  }\n\n  _getNavStructure() {\n    const contentWithoutCode = this.props.source.replace(\n      /```[^`\\n]*\\n+[^```]+```\\n+/g,\n      ''\n    );\n\n    const pattOfTitle = /#+\\s([^#\\n]+)\\n*/g;\n    const matchResult = contentWithoutCode.match(pattOfTitle);\n\n    if (!matchResult) {\n      return [];\n    }\n\n    const navData = matchResult.map((r, i) => ({\n      index: i,\n      level: r.match(/^#+/g)[0].length,\n      text: r.replace(pattOfTitle, '$1'),\n    }));\n\n    const levelCount = level => navData.filter(r => r.level === level).length;\n    let startLevel = 1;\n    let startLevelCount = levelCount(startLevel);\n    while (!startLevelCount) {\n      startLevel += 1;\n      startLevelCount = levelCount(startLevel);\n    }\n\n    let listNo = 1;\n    navData.forEach(t => {\n      if (t.level === startLevel) {\n        t.listNo = listNo.toString();\n        listNo += 1;\n      }\n    });\n\n    navData.forEach((t, i) => {\n      if (!t.listNo) {\n        if (navData[i - 1] && t.level === navData[i - 1].level + 1) {\n          t.listNo = `${navData[i - 1].listNo}.1`;\n        } else if (navData[i - 1] && t.level === navData[i - 1].level) {\n          t.listNo = navData[i - 1].listNo.replace(\n            /^(.+\\.)(\\d+)$/g,\n            (w, $1, $2) => `${$1}${parseInt($2, 10) + 1}`\n          );\n        } else {\n          t.listNo = '';\n        }\n      }\n    });\n\n    const result = navData.map(nav => ({\n      ...nav,\n      listNo: nav.listNo.indexOf('.') < 0 ? `${nav.listNo}.` : nav.listNo,\n      text: nav.text.replace(/^(\\d+\\.)+\\s?/g, '').replace(/^\\d+\\.?\\s?/g, ''),\n    }));\n\n    return result;\n  }\n\n  _scrollToTarget(dataId) {\n    if (this.scrollTimeout) {\n      clearTimeout(this.scrollTimeout);\n    }\n\n    // ToDo: create one new `scrollTo` method for different browsers.\n    this.scrollTimeout = setTimeout(() => {\n      const target = document.querySelector(`[data-id=\"${dataId}\"]`);\n      window.scrollTo(0, target.offsetTop - this.props.headingTopOffset);\n    }, 1e2);\n  }\n\n  _initheadingsId() {\n    this._getNavStructure().forEach(t => {\n      const headings = document.querySelectorAll(`h${t.level}`);\n      const curheading = Array.prototype.slice\n        .apply(headings)\n        .find(\n          h =>\n            h.innerText\n              .replace(/^(\\d+\\.)+\\s?/g, '')\n              .replace(/^\\d+\\.?\\s?/g, '') === t.text\n        );\n      if (curheading) {\n        curheading.dataset.id = `heading-${t.index}`;\n      }\n\n      const headingId = window.location.hash.match(/heading-\\d+/g);\n      if (headingId && headingId[0] === `heading-${t.index}`) {\n        this._scrollToTarget(headingId);\n        this.setState({\n          currentListNo: t.listNo,\n        });\n      }\n    });\n  }\n\n  _getHeadingList() {\n    const headingList = [];\n\n    this._getNavStructure().forEach(t => {\n      const headings = document.querySelectorAll(`h${t.level}`);\n      const curheading = Array.prototype.slice\n        .apply(headings)\n        .find(\n          h =>\n            h.innerText\n              .replace(/^(\\d+\\.)+\\s?/g, '')\n              .replace(/^\\d+\\.?\\s?/g, '') === t.text\n        );\n      if (curheading) {\n        headingList.push({\n          dataId: `heading-${t.index}`,\n          listNo: t.listNo,\n          offsetTop: curheading.offsetTop,\n        });\n      }\n    });\n\n    return headingList;\n  }\n\n  _winScroll = () => {\n    const scrollTop =\n      window.pageYOffset ||\n      document.documentElement.scrollTop ||\n      document.body.scrollTop ||\n      0;\n\n    const newHeadingList = this._getHeadingList().map(h => ({\n      ...h,\n      distanceToTop: Math.abs(\n        scrollTop + this.props.headingTopOffset - h.offsetTop\n      ),\n    }));\n    const distanceList = newHeadingList.map(h => h.distanceToTop);\n    const minDistance = Math.min(...distanceList);\n    const curHeading = newHeadingList.find(\n      h => h.distanceToTop === minDistance\n    );\n\n    this.setState({\n      currentListNo: curHeading.listNo,\n    });\n  };\n\n  render() {\n    const tBlocks = this._getNavStructure().map(t => {\n      const cls = `title-anchor title-level${t.level} ${this.state\n        .currentListNo === t.listNo\n        ? 'active'\n        : ''}`;\n\n      return (\n        <a\n          className={cls}\n          href={`#heading-${t.index}`}\n          onClick={evt => {\n            evt.preventDefault();\n            this._scrollToTarget(`heading-${t.index}`);\n\n            this.setState({\n              currentListNo: t.listNo,\n            });\n          }}\n          key={`title_anchor_${randomId()}`}>\n          {this.props.ordered\n            ? <small>\n                {t.listNo}\n              </small>\n            : null}\n          {t.text}\n        </a>\n      );\n    });\n\n    return (\n      <div className={`markdown-navigation ${this.props.className}`}>\n        {tBlocks}\n      </div>\n    );\n  }\n}\n\nexport default MarkdownNavbar;\n"]}